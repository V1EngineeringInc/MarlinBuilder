name: skr_1p3

on:
  schedule:
    # At 12:15 each day. No idea what time zone this is...
    - cron:  '15 12 * * *'
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
    paths-ignore:
    - src/configs/V1*Archim*
    - src/configs/V1*Rambo*
    - src/configs/V1*Ramps*
    - src/configs/V1*SkrPro*
    - '**/*.md'
  release:
    types:
      - published

jobs:
  build:

    env:
      MARLIN_VERSION: ${{ matrix.branch }}
      CONFIG_NAME: ${{ matrix.machine }}
      V1_VERSION: ${{ github.event_name == 'release' && github.event.release.tag_name || '' }}

    name: ${{ matrix.machine }}-${{ matrix.branch }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Allow all machines to finish building
      matrix:
        branch: ${{ fromJson(
          github.event_name == 'schedule' && '["bugfix-2.0.x"]' ||
          github.event_name == 'pull_request' && '["bugfix-2.0.x", "2.0.9.2"]' ||
          '["2.0.9.2"]') }}
        machine:
        - V1CNC_Skr1p3_8825
        - V1CNC_Skr1p3_2209
        - V1CNC_Skr1p3_Dual_8825
        - V1CNC_Skr1p3_Dual_2209
        - V1CNC_Skr1p3_DualLR_8825
        - V1CNC_Skr1p3_DualLR_2209

    steps:

    # First, cancel unfinished jobs.
    - uses: technote-space/auto-cancel-redundant-job@v1

    # Based on .github/workflows/test-builds.yml
    - name: Select Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Install PlatformIO
      run: |
        pip install -U https://github.com/platformio/platformio-core/archive/master.zip
        platformio update

    - name: Check out MarlinBuilder
      uses: actions/checkout@v2

    - name: Check out MarlinFirmware
      uses: actions/checkout@v2
      with:
        repository: MarlinFirmware/Marlin
        ref: ${{ matrix.branch }}
        path: Marlin
        clean: true
        fetch-depth: 1

    - name: Configure
      run: |
        src/core/config-for-machine ${{ matrix.machine }}

    - name: Zip up Marlin
      run: |
        src/core/zip-marlin

    - name: Upload src artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.machine }}-${{ matrix.branch }}
        path: |
          Marlin_*.zip

    - name: Build
      run: |
        src/core/build-for-machine

    - name: Zip up release
      run: |
        src/core/zip-release

    - name: Upload built artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.machine }}-${{ matrix.branch }}
        path: |
          firmware*
          Marlin_*.zip

    - name: Upload Marlin-${{ matrix.machine }}-${{ matrix.branch }}.zip to release
      if: ${{ github.event_name == 'release' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: Marlin-Release.zip
        asset_name: ${{ matrix.machine }}-${{ matrix.branch }}.zip
        asset_content_type: application/zip
